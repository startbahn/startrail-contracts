version: 2.1

orbs:
  node: circleci/node@5.1.0

qa-branch-only: &qa_branch_only
  filters:
    branches:
      only:
        - qa

qa-tag-only: &qa_tag_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only:
        - '/^subgraph-v\d+(\.\d+){3}-qa$/'

master-branch-only: &master_branch_only
  filters:
    branches:
      only: master

stg-tag-only: &stg_tag_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only:
        - '/^subgraph-v\d+(\.\d+){3}-stg$/'

prod-tag-only: &prod_tag_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only:
        - '/^subgraph-v\d+(\.\d+){2}$/'

executors:
  default:
    docker:
      - image: cimg/node:20.17.0
  foundry:
    docker:
      - image: startbahn/foundry:node-20.17.0

commands:
  #
  # Shared Commands
  #
  install_node_dependencies_startrail:
    steps:
      - node/install-packages:
          pkg-manager: yarn
          include-branch-in-cache-key: false
          # Run yarn 3 times to workaround bug: https://github.com/yarnpkg/yarn/issues/4563#issuecomment-552256526
          #
          # Yarn 2 could be another solution but it has an issue with git urls so can't install startrail-common-js:
          #   https://github.com/yarnpkg/berry/issues/2240
          #
          # Npm could be another solution but the startrail-common-js `prepare` script only runs from Yarn (API-1012)
          override-ci-command: yarn || yarn || yarn

  install_node_dependencies_subgraph:
    steps:
      - node/install-packages:
          app-dir: subgraph
          pkg-manager: yarn
          include-branch-in-cache-key: false
          override-ci-command: yarn --ignore-optional

  install_forge_dependencies:
    steps:
      - run:
          name: Install Forge dependencies
          command: forge install

  #
  # Startrail Commands
  #
  run_hardhat_compile:
    steps:
      - run:
          name: Compile Contracts
          command: npx hardhat compile
  run_hardhat_unit_test:
    steps:
      - run:
          name: Hardhat Unit tests
          command: REPORT_GAS=true npx hardhat test
  run_forge_unit_test:
    steps:
      - run:
          name: Forge Unit tests
          command: forge test
  run_solidity_coverage:
    steps:
      - run:
          name: Solidity Code Coverage
          command: npx hardhat coverage
  start_stack:
    steps:
      - run:
          name: Create docker network
          command: yarn run create-startrail-network
      - run:
          name: Start Startrail
          command: yarn run hardhat-up-bg
          background: true
      - run:
          name: Start Subgraph
          command: cd subgraph && yarn run graph-up-bg
          background: true
      - run:
          name: Wait for Subgraph to be ready
          command: subgraph/bin/wait_for_subgraph
  run_startrail_deploy_and_seed:
    steps:
      - run:
          name: Compile Local
          command: yarn compile
      - run:
          name: Deploy Local
          command: yarn deploy-local
      - run:
          name: Seed Minimal
          command: yarn seed-minimal
      - run:
          name: Seed Extended
          command: yarn seed-extended
  run_subgraph_deploy:
    steps:
      - run:
          name: Create Subgraph
          command: cd subgraph && yarn create-local
      - run:
          name: Deploy Subgraph
          command: cd subgraph && yarn deploy-local

  #
  # Subgraph commands
  #
  build_subgraph_source:
    steps:
      - run:
          name: Build subgraph source and generate code
          command: |
            cd subgraph && yarn run codegen-develop && yarn run build-develop

  build_subgraph_develop_source:
    steps:
      - run:
          name: Build subgraph source and generate code
          command: |
            cd subgraph && yarn run codegen-develop && yarn run build-develop
  build_subgraph_release_source:
    steps:
      - run:
          name: Build subgraph qa source and generate code
          command: |
            cd subgraph && yarn run codegen-release && yarn run build-release

  build_subgraph_staging_source:
    steps:
      - run:
          name: Build subgraph staging source and generate code
          command: |
            cd subgraph && yarn run codegen-staging && yarn run build-staging

  build_subgraph_polygon_source:
    steps:
      - run:
          name: Build subgraph polygon source and generate code
          command: |
            cd subgraph && yarn run codegen-polygon && yarn run build-polygon

  run_subgraph_test:
    steps:
      - run:
          name: Run subgraph tests
          command: |
            cd subgraph && yarn test
  deploy_develop:
    steps:
      - run:
          name: deploy amoy develop subgraph into public node
          command: cd subgraph && yarn run deploy-develop
  deploy_release:
    steps:
      - run:
          name: deploy amoy release subgraph into Alchemy
          command: cd subgraph && VERSION_LABEL=$CIRCLE_TAG yarn run deploy-alchemy-release
  deploy_staging:
    steps:
      - run:
          name: deploy amoy staging subgraph into Alchemy
          command: cd subgraph && VERSION_LABEL=$CIRCLE_TAG yarn run deploy-alchemy-staging

  deploy_polygon:
    steps:
      - run:
          name: deploy mainnet master subgraph into Alchemy
          command: cd subgraph && VERSION_LABEL=$CIRCLE_TAG yarn run deploy-alchemy-polygon

  install_nodejs:
    steps:
      - node/install:
          node-version: 20.17.0
          install-yarn: false

  # Workaround because using 'install-yarn' from the node orb is failing
  # on the ubuntu machine and it's unclear why.
  install_yarn_on_ubuntu_machine:
    steps:
      - run:
          name: Install Yarn with corepack
          command: |
            corepack enable && corepack prepare yarn@v1.22.19 --activate

jobs:
  #
  # Shared Jobs
  #
  install_dependencies:
    executor: default
    steps:
      - checkout
      - install_node_dependencies_startrail
      - install_node_dependencies_subgraph

  #
  # Startrail Jobs
  #
  build_startrail:
    executor: default
    steps:
      - checkout
      - install_node_dependencies_startrail
      - run_hardhat_compile
  test_startrail_hardhat:
    executor: default
    steps:
      - checkout
      - install_node_dependencies_startrail
      - run_hardhat_compile
      - run_hardhat_unit_test
  test_startrail_forge:
    executor: foundry
    steps:
      - checkout
      - install_node_dependencies_startrail
      - install_forge_dependencies
      - run_forge_unit_test

  test_subgraph:
    machine:
      image: ubuntu-2204:2023.04.2
    resource_class: medium
    steps:
      - install_nodejs
      - install_yarn_on_ubuntu_machine
      - checkout
      - install_node_dependencies_startrail
      - install_node_dependencies_subgraph
      - start_stack
      - run_startrail_deploy_and_seed
      - run_subgraph_deploy
      - run_subgraph_test

  #
  # Subgraph Jobs
  #
  build_subgraph:
    executor: default
    steps:
      - checkout
      - install_node_dependencies_subgraph
      - build_subgraph_source
  amoy_develop:
    executor: default
    steps:
      - checkout
      - install_node_dependencies_subgraph
      - build_subgraph_develop_source
      - deploy_develop
  amoy_release:
    executor: default
    steps:
      - checkout
      - install_node_dependencies_subgraph
      - build_subgraph_release_source
      - deploy_release
  amoy_staging:
    executor: default
    steps:
      - checkout
      - install_node_dependencies_subgraph
      - build_subgraph_staging_source
      - deploy_staging
  polygon_mainnet:
    executor: default
    steps:
      - checkout
      - install_node_dependencies_subgraph
      - build_subgraph_polygon_source
      - deploy_polygon

workflows:
  version: 2
  build_and_test:
    jobs:
      - install_dependencies
      - build_startrail:
          requires:
            - install_dependencies
      - build_subgraph:
          requires:
            - install_dependencies
      - test_startrail_hardhat:
          requires:
            - build_startrail
      - test_startrail_forge:
          requires:
            - build_startrail
      - test_subgraph:
          requires:
            - build_subgraph
